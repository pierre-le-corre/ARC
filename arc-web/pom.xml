<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>fr.insee</groupId>
		<artifactId>arc</artifactId>
		<version>0.0.2-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	
	<groupId>fr.insee.arc</groupId>
	<artifactId>arc-web</artifactId>
	<packaging>war</packaging>
	<name>ARC-WEB</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<profiles>
		<profile>
			<id>docker</id>
		</profile>
	</profiles>

	<!-- *************************************** LA GESTION DES DEPENDANCES 
		COMMENCE ICI *************************************** -->
	<dependencies>
		<!-- C'est ici que seront declarées toutes les dépendances du projet. La 
			déclaration d'une dépendance se fait de la manière suivante : <dependency> 
			<groupId>junit</groupId> <artifactId>junit</artifactId> <version>4.8.2</version> 
			<scope>test</scope> </dependency> Les tags <groupId>, <artifactId> et <version> 
			servent à identifier la librairie que vous souhaitez ajouter en dépendance. 
			Le tag <scope> correspond à la portée des dépendances : - compile (valeur 
			par defaut si le tag est omis) : pour la compilation ET l'exécution - runtime 
			: pour l'exécution uniquement - test : pour l'exécution des tests - provided 
			: librairie déjà présente sur l'environnement d'exécution (exemple : la librairie 
			servlet-api, qui sera portée par le serveur d'application) -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>[1.4,)</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>fr.insee.arc</groupId>
			<artifactId>arc-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.insee.arc</groupId>
			<artifactId>arc-core</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180813</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${project.spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!-- Keycloak -->
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-security-adapter</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.9</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>2.7</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>arc-web</finalName>
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>prod/*.properties</exclude>
				</excludes>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/resources/assembly/assembly-web.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

		</plugins>

	</build>
</project>
